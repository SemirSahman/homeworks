package ba.bitcamp.task234;

/**
 * Class representing a book.
 * @author Semir
 *
 */
public class Book {

	private String name;
	private double price;
	private int inStock;
	private Author author;
	
	/**
	 * @param name Books name.
	 * @param price Price
	 * @param inStock In stock amount
	 * @param author Books author
	 * @throws IllegalArgumentException When value of price is less than 0 
	 */
	public Book(String name, double price, int inStock, Author author) throws IllegalArgumentException {
		super();
		if (price < 0 || inStock < 0){
			throw new IllegalArgumentException();
		}
		this.name = name;
		this.price = price;
		this.inStock = inStock;
		this.author = author;
	}

	/**
	 * @return The name
	 */
	public String getName() {
		return name;
	}

	/**
	 * @param name The name to set
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * @return The price
	 */
	public double getPrice() {
		return price;
	}

	/**
	 * @param price The price to set
	 * @throws IllegalArgumentException When value of price is less than 0
	 */
	public void setPrice(double price) throws IllegalArgumentException{
		if (price < 0){
			throw new IllegalArgumentException();
		}
		this.price = price;
	}

	/**
	 * @return The in stock amount
	 */
	public int getInStock() {
		return inStock;
	}

	/**
	 * @param inStock The in stock amount to set
	 * @throws IllegalArgumentException When value of inStock is less than 0
	 */
	public void setInStock(int inStock) throws IllegalArgumentException {
		if (inStock < 0){
			throw new IllegalArgumentException();
		}
		this.inStock = inStock;
	}

	/**
	 * @return The author 
	 */
	public Author getAuthor() {
		return author;
	}

	/**
	 * @param author The author to set
	 */
	public void setAuthor(Author author) {
		this.author = author;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "Book [name=" + name + ", price=" + price + ", inStock="
				+ inStock + ", author=" + author + "]";
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof Book))
			return false;
		Book other = (Book) obj;
		if (author == null) {
			if (other.author != null)
				return false;
		} else if (!author.equals(other.author))
			return false;
		if (inStock != other.inStock)
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (Double.doubleToLongBits(price) != Double
				.doubleToLongBits(other.price))
			return false;
		return true;
	}
}